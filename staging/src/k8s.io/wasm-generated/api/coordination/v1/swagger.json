{"swagger":"2.0","info":{"title":"kubernetes","version":"unversioned"},"paths":{},"definitions":{"Lease":{"description":"Lease defines a lease concept.","type":"object","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string","x-omitempty":true},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string","x-omitempty":true},"metadata":{"description":"More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","x-go-type":{"import":{"alias":"apimachinery_pkg_apis_meta_v1","package":"k8s.io/wasm-generated/apimachinery/pkg/apis/meta/v1"},"type":"ObjectMeta"},"x-nullable":true,"x-omitempty":true},"spec":{"description":"spec contains the specification of the Lease. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status","x-nullable":true,"x-omitempty":true,"$ref":"#/definitions/LeaseSpec"}},"x-kubernetes-group-version-kind":[{"group":"coordination.k8s.io","kind":"Lease","version":"v1"}]},"LeaseList":{"description":"LeaseList is a list of Lease objects.","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string","x-omitempty":true},"items":{"description":"items is a list of schema objects.","type":"array","items":{"$ref":"#/definitions/Lease"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string","x-omitempty":true},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","x-go-type":{"import":{"alias":"apimachinery_pkg_apis_meta_v1","package":"k8s.io/wasm-generated/apimachinery/pkg/apis/meta/v1"},"type":"ListMeta"},"x-nullable":true,"x-omitempty":true}},"x-kubernetes-group-version-kind":[{"group":"coordination.k8s.io","kind":"LeaseList","version":"v1"}]},"LeaseSpec":{"description":"LeaseSpec is a specification of a Lease.","type":"object","properties":{"acquireTime":{"description":"acquireTime is a time when the current lease was acquired.","x-go-type":{"import":{"alias":"apimachinery_pkg_apis_meta_v1","package":"k8s.io/wasm-generated/apimachinery/pkg/apis/meta/v1"},"type":"MicroTime"},"x-nullable":true,"x-omitempty":true},"holderIdentity":{"description":"holderIdentity contains the identity of the holder of a current lease.","type":"string","x-omitempty":true},"leaseDurationSeconds":{"description":"leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed renewTime.","type":"integer","format":"int32","x-omitempty":true},"leaseTransitions":{"description":"leaseTransitions is the number of transitions of a lease between holders.","type":"integer","format":"int32","x-omitempty":true},"renewTime":{"description":"renewTime is a time when the current holder of a lease has last updated the lease.","x-go-type":{"import":{"alias":"apimachinery_pkg_apis_meta_v1","package":"k8s.io/wasm-generated/apimachinery/pkg/apis/meta/v1"},"type":"MicroTime"},"x-nullable":true,"x-omitempty":true}}}}}